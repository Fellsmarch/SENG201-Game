Currently text font is inconsistent.




We need to know:
- What recovery rate is
- Can you write 'home' instead of a direction to go back home
- Do we have to conform to what they said about GameEnvironment being a simple loop that displays options, can we have our input in different classes/methods like we're trying to do


Map:
    I think the game wants us to display the map in the options (Go North - Shop ect), to do this we could just put the options
    array inside the for loop and if they use a map for that city, change the options array.

Powerup/healing items:
    ---*---Use enums for readability?---*---
    We should change the consumables to objects so that we can store their:
        Price
        Name
        Description
        Effect(?)
    otherwise, we will have to hardcode these in 3-4 times (shop menu, inventory in base & hospital/powerup den)

Hero:
    Could call defense mod armour
    Could call shopPrice mod barter

GameEnvironment:
    Should we have a startGame() method which is called in the main and possibly also a choose direction method?
        However both of these would have similar input code
    Should move the input checkers and text related methods to their own class so we can call from any class

Villain:
    I added an ArrayList of Game to Villain variables and constructor so that when we choose a game we don't have to give a list of games to choose from everytime, the games will always be the same.

City:
    If we don't put the villains lair building into the building list put into the constructor, we can parse the villain to add the lair
        in the constructor then in createGame generate the villains first then iterate through and create cities, doing the superVillain
        at the end
        
        
Have runGame do a for for each city, do while !cityComplete then after while loop check if its the final city (with if or a try catch block)
if it's not, set current city to the next city. To deal wtih game loss, just check when a hero dies if it was the last hero
print You lost the game, then System.exit();
Could also return false from villainlair if we want gameEnvironment to deal with game loss



Checking input:
Could make this a public method in game_environment and call it with the accepted input range, (printing the text before calling checkInput)
try: 
    userInput = scanner.nextInt(); // checks if input is an int
    if (userInput == 1):
        doThing
    elseif (userInput == 2):
        doThing
    else:
        Sysout("Input was out of range, please try again")
catch exception:
    Sysout("input was not an int")
    
 


test
